.game
  %h4
    #{@game.description}
  %p
    %b#prompt
      - current_users_turn = @game.users_turn?(current_user)
      - opponent = @game.opponent(current_user)
      -if ((@game.player_one_won? and (@game.player_one.user == current_user)) or (@game.player_two_won? and (@game.player_two.user == current_user)))
        You WON!!!
      -elsif @game.over?
        You LOST!!!
      -elsif @game.challenged?(current_user)
        You've been CHALLENGED!
      -elsif @game.challenger?(current_user)
        Waiting for challenge response from #{opponent.name}...
      -elsif current_users_turn
        Your turn!
      -elsif opponent
        #{opponent.name}'s turn...
  .pyramid
    .prepend_letter
      =text_field_tag("prepend_letter", "", maxlength: 1, disabled: !current_users_turn)
    .played_letters
      -last_word = ''
      -@game.turns.each do |turn|
        -last_word = last_word + turn.letter if turn.position == Turn::FINISH
        -last_word = turn.letter + last_word if turn.position == Turn::START
        #{last_word}
        %br
    .append_letter
      =text_field_tag("append_letter", "", maxlength: 1, disabled: !current_users_turn)
  .buttons
    =submit_tag "Submit turn", :class => 'btn btn-primary', :id => 'submit_turn', disabled: !current_users_turn
    =submit_tag "Challenge", :class => 'btn btn-primary', :id => 'submit_challenge', disabled: !current_users_turn
  #turn_form
    =simple_form_for [@game,@turn], remote: true do |f|
      =f.input :letter
      =f.input :position
  =hidden_field_tag("turn_form_url", game_turns_path(@game), :id => 'turn_form_url')
  =hidden_field_tag("game_challenge_url", challenge_game_path(@game), :id => 'game_challenge_url')
  =hidden_field_tag("auth_token", form_authenticity_token, :id => 'auth_token')
  =hidden_field_tag("last_word", @game.current_word, :id => 'last_word')